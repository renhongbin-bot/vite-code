fetch("/api").then(res => {
  console.log(res)
})

// 浏览器先帮我们做一步拼接

// 127.0.0.1:5173/api 浏览器拼接完之后 找 ---> vite

// vite发现path有配置过跨域代理策略 根据策略的描述对象 进行再次请求
// /api http://www.360.com

// 偷天换日

// 本来要请求360，直接请求的话，会被浏览器逮住
// 我自己开一个服务器 --先请求我我自己服务器变成服务器和服务器的通信 用我们自己的服务器请求360服务器 360浏览器把东西给过来
// 我们自己服务器拿到对应结果后，我们直接把结果响应给浏览器

// 实际上响应体是360的